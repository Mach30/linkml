Usage: gen-python [OPTIONS] YAMLFILE

  Generate python classes to represent a LinkML model

Options:
  --head / --no-head              Emit metadata heading
  --genmeta / --no-genmeta        Generating metamodel. Only use this for
                                  generating meta.py

  --classvars / --no-classvars    Generate CLASSVAR info
  --slots / --no-slots            Generate Slot information
  -f, --format [py]               Output format (default=py)
  --metadata / --no-metadata      Include metadata in output
                                  (default=--metadata)

  --output_directory TEXT         Output directory for individually generated
                                  class files

  --package TEXT                  Package name where relevant for generated
                                  class files

  --template_file TEXT            Optional jinja2 template to use for class
                                  generation

  --useuris / --metauris          Include metadata in output
                                  (default=--useuris)

  -im, --importmap FILENAME       Import mapping file
  --log_level [CRITICAL|ERROR|WARNING|INFO|DEBUG]
                                  Logging level (default=WARNING)
  --mergeimports / --no-mergeimports
                                  Merge imports into source file
                                  (default=mergeimports)

  --help                          Show this message and exit.
